@model IEnumerable<ALMASWeb.Models.InventoryModel>

@{
    ViewBag.Root = "Inventory";
    ViewBag.Title = "Index";
}

<div class="content-wrapper">
    <!-- Content area -->
    <div class="content">
        <!-- Form inputs -->
        <div class="card animated bounceInLeft">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">@ViewBag.Root</h5>
                @*<div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                            <a class="list-icons-item" data-action="reload"></a>
                            <a class="list-icons-item" data-action="remove"></a>
                        </div>
                    </div>*@
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Index", "Inventory", FormMethod.Post, new { id = "submitForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="text" id="search" name="search" class="d-none" />
                    if (ViewBag.InventoryGroup != null)
                    {
                        <div class="row mt-0">
                            <div class="row col-lg-2 @(ViewBag.WarehouseCount == 1 ? "d-none" : "")">
                                <div class="col-lg-12">
                                    <label class="mb-0">Gudang</label>
                                    <div class="input-group">
                                        @Html.DropDownList("Warehouse", ViewBag.Warehouse as SelectList, "ALL", new { @class = "custom-select", @style = "height:auto;" })
                                    </div>
                                </div>
                            </div>
                            <div class="row col-lg-2 @(ViewBag.InventoryGroupCount == 1 ? "d-none" : "")">
                                <div class="col-lg-12">
                                    <label class="mb-0">Group</label>
                                    <div class="input-group">
                                        @Html.DropDownList("InventoryGroup", ViewBag.InventoryGroup as SelectList, null, new { @class = "custom-select", @style = "height:auto;", onchange = "UpdateCategoryNameAndTypeName()" })
                                    </div>
                                </div>
                            </div>
                            <div class="row col-lg-2 @(ViewBag.InventoryCategoryCount == 1 ? "d-none" : "")">
                                <div class="col-lg-12">
                                    <label class="mb-0 InventoryCategoryName">@ViewBag.InventoryCategoryName</label>
                                    <div class="input-group">
                                        @Html.DropDownList("InventoryCategory", ViewBag.InventoryCategory as SelectList, "ALL", new { @class = "custom-select", @style = "height:auto;" })
                                    </div>
                                </div>
                            </div>
                            <div class="row col-lg-2 @(ViewBag.InventoryTypeCount == 1 ? "d-none" : "")">
                                <div class="col-lg-12">
                                    <label class="mb-0 InventoryTypeName">@ViewBag.InventoryTypeName</label>
                                    <div class="input-group">
                                        @Html.DropDownList("InventoryType", ViewBag.InventoryType as SelectList, "ALL", new { @class = "custom-select", @style = "height:auto;" })
                                    </div>
                                </div>
                            </div>
                            <div class="row col-lg-2">
                                <div class="col-lg-12">
                                    <label class="mb-0">&nbsp;</label>
                                    <div class="form-group mb-0">
                                        <div class="btn-toolbar">
                                            <div class="btn-group">
                                                <button type="submit" class="btn btn-outline-primary form-control"><i class="icon-reload-alt mr-2"></i>SEARCH</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                <div class="table-responsive mt-2">
                    <table class="table table-hover datatable">
                        <thead>
                            <tr>
                                <th class="non-sortable non-searchable"></th>
                                <th>Kode</th>
                                <th class="InventoryCategoryName @(ViewBag.InventoryCategoryCount == 1 ? "d-none" : "")">@ViewBag.InventoryCategoryName</th>
                                <th class="InventoryTypeName">@ViewBag.InventoryTypeName</th>
                                <th>Product</th>
                                <th class="text-right">Total Stok</th>
                                <th class="text-right">Harga</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td><img style="max-width:100px; max-height:100px;" onclick="ViewImage('@LIBUtil.Util.getImageSource(item.Picture, null)')" src="@LIBUtil.Util.getImageSource(item.Picture, null)"></td>
                                        <td>@Html.DisplayFor(modelItem => item.InventoryID)</td>
                                        <td class=" @(ViewBag.InventoryCategoryCount == 1 ? "d-none" : "")">@Html.DisplayFor(modelItem => item.CategoryName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.TypeName)</td>
                                        <td><div>@Html.DisplayFor(modelItem => item.InventoryName)</div></td>
                                        <td class="text-right">
                                            <div><a href="javascript:void(0)" onclick="WarehouseList('@item.InventoryID')">@string.Format("{0:N0}", item.Stock)</a></div>
                                            <div class="small mt-1">@Html.DisplayFor(modelItem => item.PackingInfo)</div>
                                        </td>
                                        <td class="text-right">@string.Format("{0:N0}", item.PriceTag)</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- /form inputs -->
    </div>
    <!-- /content area -->
</div>

<script type="text/javascript">

    $(document).ready(function () {

        if('@ViewBag.Filter_InventoryGroupFilter_InventoryGroup' != null && '@ViewBag.Filter_InventoryGroupFilter_InventoryGroup' != '')
            $('#InventoryGroup').val('@ViewBag.Filter_InventoryGroup');

        $('#InventoryCategory').val('@ViewBag.Filter_InventoryCategory');
        $('#InventoryType').val('@ViewBag.Filter_InventoryType');
        $('#Warehouse').val('@ViewBag.Filter_Warehouse');

        if('@ViewBag.Filter_Search' != null && '@ViewBag.Filter_Search' != '')
            setSearch('@ViewBag.Filter_Search'); //apply search
    });


    function ReloadInventoryCategory() {
         $.ajax({
            type: "GET",
            url: '@Url.Action("getInventoryCategoryList", "Inventory", new { Area = "" })',
            data: {
                GroupID: $('#InventoryGroup').val()
            },
             success: function (data) {
                 var ddl = $('#InventoryCategory');
                 ddl.empty();
                 ddl.append('<option value="" selected>ALL</option>'); //add placeholder
                 $.each(data.models, function (index, row) {
                     ddl.append("<option value='" + row.CategoryID + "'>" + row.Name + "</option>")
                 });
            }, //end success
            error: function (result) {
                bootbox.alert({ backdrop: true, message: "Error " + result });
            } //end error
        }); //end ajax
    }

    function UpdateCategoryNameAndTypeName() {
         $.ajax({
            type: "GET",
            url: '@Url.Action("getCategoryNameAndTypeName", "Inventory", new { Area = "" })',
            data: {
                GroupID: $('#InventoryGroup').val()
            },
             success: function (data) {
                 $('.InventoryCategoryName').html(data.categoryName);
                 $('.InventoryTypeName').html(data.typeName);
            }, //end success
            error: function (result) {
                bootbox.alert({ backdrop: true, message: "Error " + result });
            } //end error
        }); //end ajax
    }

    $('#submitForm').submit(function (e) {
        $(this).find(':submit').attr('disabled', 'disabled'); //prevent double click on submit
        $('#search').val(getSearch());
    });

    function ViewImage (image) {
        bootbox.alert({
            size: 'large',
            backdrop: true,
            message: "<div style='width:100%; text-align:center;'><img style='max-width: 858px;' src=" + image + "></div>"
        });
    }

    function WarehouseList(InventoryID, WarehouseID) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetList", "WarehouseStock", new { Area = "" })',
            data: {
                InventoryID: InventoryID,
                WarehouseID: $('#Warehouse').val()
            },
            success: function (data) {
                var dialog = bootbox.alert({
                    title: 'Stock',
                    message: data.content,
                    backdrop: true
                }).off("shown.bs.modal"); //scroll to top
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

</script>

